# .bashrc_mine
# Created to "augment" what the default is with my preferences.

#################################################################
#-INCLUDES
#################################################################
if [ -f ~/.bashrc_alias ];
then
    source ~/.bashrc_alias
else
    echo "WARNING: ~/.bashrc_alias not referenced and not found.";
fi

if [ -f ~/.bashrc_machines ];
then
    source ~/.bashrc_machines
else
    echo "WARNING: ~/.bashrc_machines not referenced and not found.";
fi

if [ -f ~/.bashrc_keys ];
then
    source ~/.bashrc_keys
else
    echo "WARNING: ~/.bashrc_keys not referenced and not found.";
fi

#################################################################
#-PATHS
#################################################################
export PATH_ROOT="/projects/app";
#export CORE_PATH=${HOME}/bin:${HOME}/.local/bin:/opt/homebrew/bin:/usr/bin:/sw/bin:${APS_BIN}:${M2_HOME};
export LD_LIBRARY_PATH="/usr/lib:/usr/lib64";
#export PATH="${KRB_PATH}:${CORE_PATH}:${PATH}"
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/lib:/usr/lib64:${PATH_ROOT}/.local/lib/python3.9/site-packages/nvidia/cudnn/lib:${PATH_ROOT}/.local/lib/python3.9/site-packages/tensorrt_libs";
export PATH="$PATH:${PATH_ROOT}/.local/bin:${PATH_ROOT}/pandoc/bin";

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/christopherwood/projects/apps/google-cloud-sdk/path.bash.inc' ]; then . '/Users/christopherwood/projects/apps/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/christopherwood/projects/apps/google-cloud-sdk/completion.bash.inc' ]; then . '/Users/christopherwood/projects/apps/google-cloud-sdk/completion.bash.inc'; fi


#################################################################
#-CLOUD SERVICE PROVIDERS PATHS
#################################################################
# The next line updates PATH for the Azure CLI
if [ -f "${PATH_ROOT}/azure-cli" ];
then
	export PATH=$PATH:"${PATH_ROOT}/azure-cli/bin:${PATH_ROOT}/azcopy";
	source "${PATH_ROOT}/azure-cli/az.completion";
fi

# The next line updates PATH for the Google Cloud SDK.
if [ -f "${PATH_ROOT}/google-cloud-sdk/path.bash.inc" ];
then
	source "${PATH_ROOT}/google-cloud-sdk/path.bash.inc";
	source "${PATH_ROOT}/google-cloud-sdk/completion.bash.inc"; 
fi

# The next line updates PATH for the AWS CLI
if [ -f "${PATH_ROOT}/aws" ];
then
	export PATH=$PATH:"${PATH_ROOT}/aws/bin";
fi


#################################################################
#-EDITORS
#################################################################
export EDITOR=vim; 
export SVN_EDITOR=vim; 
export GIT_EDITOR=vim; 

#################################################################
#-REPOSITORY
#################################################################
export GIT_AUTHOR_NAME="christopher.wood"; 
export GIT_AUTHOR_EMAIL="christopher.wood@nrlssc.navy.mil"; 
export GIT_COMMITTER_NAME=${GIT_AUTHOR_NAME}; 
export GIT_COMMITTER_EMAIL=${GIT_AUTHOR_EMAIL}; 

#################################################################
#-COMPILERS
#################################################################
#export PGI_COMPILER=/common/pgi/14.7/linux86-64/14.7/bin; 
#export INTEL_COMPILER=/common/intel/bin; 
#export INTEL_COMPILER=/common/utilities/bin; 
#export INTEL_COMPILER=/common/intel/composer_xe_2015.2.164/bin/intel64/; 
#export COMPILER="/common/intel/composer_xe_2015.2.164/bin/intel64/"; 
#export LIBS="/common/intel/composer_xe_2015.2.164/compiler/lib/intel64/";
#export LM_LICENSE_FILE="/common/utilities/intel_compilers/licenses"; 

#################################################################
#-NCAR STUFF
#################################################################
#export NCARG_ROOT="/common/NCL_6.5.0_gcc485"; 
#export NCARG_LIBS="${NCARG_ROOT}/lib/";

#################################################################
#-MPI Stuff
#################################################################
#export OPENMPI_BIN="/usr/lib64/openmpi/bin";
#export OPENMPI_LIB="/usr/lib64/openmpi/lib:/usr/lib64/openmpi/lib/openmpi";
#export INTELMPI_BIN="/common/intel/impi/5.0.3.048/intel64/bin/";
#export INTELMPI_LIB="/common/intel/impi/5.0.3.048/intel64/lib/";

#################################################################
#-SOFTWARE
#################################################################
#export SW_DIR=/net/americium/export/sw/Linux-i686/bin
#export APS_ETC=/projects/ZAPS/aps_v6.10/etc; 
#export APS_DATA=/projects/ZAPS/aps_v6.10/data; 
#export APS_DIR=/projects/ZAPS/aps_v6.10; 
#export APS_BIN=/projects/ZAPS/aps_v6.10/bin; 
#export M2_HOME=$HOME/Documents/apps/mvn/bin; 
#export KRB5_HOME=/common/krb5; 
#export GOPATH=$HOME/Documents/apps/go;

#################################################################
#-PROMPT
#################################################################
if [[ $EUID -eq 0 ]];
then
  sq_color="\[\033[0;31m\]"  #red
else
  sq_color="\[\033[0;32m\]"  #black
fi
  re_color="\[\033[0;37m\]"  #grey

#Heavy
#export PS1="\n$sq_color[\!]--[$re_color\u@\h$sq_color]--[$re_color\t$sq_color]--[$re_color$(date +"%A %d %b %Y")$sq_color]\n\342\224\224\342\224\200\342\224\200\342\225\274> $re_Color \W ($(ls -1 | /usr/bin/wc -l | /usr/bin/sed 's: ::g') files \[\033[1;33m\]\$(/bin/ls -lah | /bin/grep -m 1 total | /usr/bin/sed 's/total //')b)$sq_color \$$re_color"

#Involved
export PS1="\n$sq_color[\!]--[$re_color\u@\h$sq_color]--[$re_color\t$sq_color]--[$re_color$(date +"%A %d %b %Y")$sq_color]\n\342\224\224\342\224\200\342\224\200\342\225\274> $re_Color \W ($(ls -1a | /usr/bin/wc -l | /usr/bin/sed 's: ::g') files \[\033[1;33m\]\$(/bin/ls -lah | head -1 | /usr/bin/sed 's/total //')b)$sq_color \$$re_color"

#Simple
#export PS1="\n$sq_color[$re_color\u@\h (\W)]\$$re_color"

#################################################################
#-ANACONDA
#################################################################
#ANACONDA
#>>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
export the_conda="conda";
__conda_setup="$('/opt/${the_conda}/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"

#MINICONDA
#export the_conda="miniconda";
#__conda_setup="$('/opt/miniconda/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"

if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/${the_conda}/etc/profile.d/conda.sh" ]; then
        . "/opt/${the_conda}/etc/profile.d/conda.sh"
    else
        export PATH="$PATH:/opt/${the_conda}/bin"
    fi
fi
unset __conda_setup
#<<< conda initialize <<<
