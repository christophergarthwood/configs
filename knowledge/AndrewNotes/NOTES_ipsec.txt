
#----------------------------------------------------------------------------------
freeswan:

papers:
http://www.samag.com/documents/s=4072/sam0203c/sam0203c.htm

performance stats:
http://www.freeswan.org/freeswan_trees/freeswan-1.95/doc/performance.html

authenticated only:
http://www.freeswan.org/freeswan_trees/freeswan-1.95/doc/adv_config.html   (at bottom)

#----------------------------------------------------------------------------------

freeswan build:
wget ftp://ftp.xs4all.nl/pub/crypto/freeswan/LATEST.tar.gz
wget ftp://ftp.xs4all.nl/pub/crypto/freeswan/LATEST.tar.gz.sig
wget ftp://ftp.xs4all.nl/pub/crypto/freeswan/freeswan-sigkey.asc
wget ftp://ftp.xs4all.nl/pub/crypto/freeswan/freeswan-sigkey2002.asc

mv LATEST.tar.gz /usr/src
cd /usr/src #freeswan docs:http://www.freeswan.org/freeswan_trees/freeswan-1.95/doc/install.html
tar xzvf LATEST.tar.gz && cd freeswan-*/

#freeswan figures out which kernel you are using, so all linux versions should be ok
#kernel src needs to be in /usr/src/linux (can be symlink)
#some config on kernel must have been run, though any options set are ok (make menuconfig -> ESC -> yes)

(must do as root, some /usr/local/ stuff is done)
make menugo   (if you had a working config already, freeswan adds itself default on,
                   so everything is ready to go)
(for some reason I get an error if I dont put scsi as atleast a module)

stuff added is in Networking options

build kicks off automagically

make install

cd /usr/src/linux
cp ./arch/i386/boot/bzImage /boot/vmlinuz-freeswan
make modules && make modules_install

change lilo/grub conf to boot new kernel

creates:
/etc/init.d/ipsec  (and /etc/init.d/ipsec.old)
and links
/etc/rc3.d/S47ipsec -> ../init.d/ipsec

(note: you can not start up /etc/init.d/ipsec and everything will
be fine. the interfaces ipsec0, etc will not be there, but everything
will work. then you can /etc/init.d/ipsec and freeswan will start up)

The big files to change are (probably in /etc or /):
ipsec.conf
ipsec.secrets

vi /etc/init.d/ipsec
#!/bin/sh
echo "0" > /proc/sys/net/ipv4/conf/eth0/rp_filter
echo "0" > /proc/sys/net/ipv4/conf/all/rp_filter
echo "0" > /proc/sys/net/ipv4/conf/default/rp_filter

or vi /etc/sysctl.conf 
net.ipv4.conf.default.rp_filter = 0


#----------------------------------------------------------------------------------

Article

All we need to start building VPNs is to edit the ipsec.conf and ipsec.secrets files and then invoke IPSec through the
ipsec application.

The ipsec.secrets file contains confidential information and should only be made readable and writable by root. 

IPSec has two modes - transport mode and tunnel mode. Transport mode provides source-to-destination protection of
the datagrams only. It authenticates, encapsulates, and encrypts the IP data only, but leaves the transport headers (IP
information) intact
In tunnel mode, a new IP header is created and encapsulates the entire original IP datagram, effectively hiding
information about the original sender


The ipsec utility run with rsasigkey option generates a public-private key pair in the required format for the
ipsec.secets file (see the manpage for ipsec_rsasigkey for further information). Public keys generated by the
rsasigkey can then be cut-and-pasted into the ipsec.conf and assigned to leftrsasigkey and rightrsasigkey as in
Listings 1(d)-(f). Listing 2(b) shows the ipsec.secrets entry accompanying Listing 1(d) with the RSA key output from
generated rsasigkey.

FreeS/WAN can also implement X.509 certificates (commonly used for the Secure Sockets Layer - SSL)

Once the certificate has been stored locally on the FreeS/WAN host in a
specified location, entries leftrsasigkey=%cert and leftrsasigkey=%cert specify use of the certificates. Third-party
tools for authentication based on PGPNet are also available (http://www.zengl.net/freeswan/download/).

The PSK method uses a single, mutually shared secret as a primary authenticator and the IP addresses as a secondary
authenticator. RSA authentication only requires appropriate knowledge of public and private keys of the
communicating parties. Therefore, for FreeS/WAN installations that use RSA key pairs, fixed IP addresses no longer
serve as identifiers

The rightid and leftid lines are used as an extra verification step
The last option is basically an arbitrary pair of shared keys.
However, unlike the PSK authentication case, security is not endangered for RSA-authenticated installations by theft
of this information alone.

Running a FreeS/WAN IPSec tunnel through any device with NAT (Network Address Translation) or IP
masquerading will have unpredictable results and is not recommended.

For Pluto's automatic keying to work, port 500 must be accessible to UDP packets on each of the IPSec gateway
hosts. ESP uses protocol 50; AH uses protocol 51 and, if either ESP and AH are used, the firewall rules must be set up
accordingly.

opportunistic encryption:
The destinations of all outgoing packets are checked for a public key through a DNS record that publishes public keys.
In conventional implementations of DNS using BIND, the public key is merely a string placed in the domains TXT
records for that host. For opportunistic encryption to work, control of the DNS reverse maps is required.

Because connections to DNS servers are based only on very loose trusts and generally not authenticated, this system
is not considered completely secure.
#----
LISTINGS AND FIGURE CAPTIONS
LISTINGS

Listing 1(a) Basic Setup and defaults for ipsec.conf


# /etc/ipsec.conf - FreeS/WAN IPSEC configuration file


# More elaborate and more varied sample configurations can be found
# in doc/examples.


# basic configuration
config setup
        # THIS SETTING MUST BE CORRECT or almost nothing will work;
        # %defaultroute is okay for most simple cases.
        interfaces=%defaultroute
# Debug-logging controls:  "none" for (almost) none, "all" for lots.
        klipsdebug=none
        plutodebug=none
# Use auto= parameters in conn descriptions to control startup actions.
        plutoload=%search
        plutostart=%search

# defaults for subsequent connection descriptions
conn %default
# How persistent to be in (re)keying negotiations (0 means very).
        keyingtries=0
# Set up autokeying using IKE
        keyexchange=ike
        keylife=8h
        authby=secret


Listing 1(b) Transport Mode VPN with Static IP Addresses

# Example of transport mode (host-to-host, static IPs) 
# PSK authentication 
conn connection_1
      type=transport
      left=1.2.3.4
      right=5.6.7.8
      auto=start

Listing 1(c) Tunnel Mode VPN with Static IP Addresses

# Simple tunnel mode (subnet-to-subnet, static IPs)
# PSK authentication
conn connection_2
   type=tunnel
# Left security gateway, subnet behind it, next hop toward it.
   left=1.2.3.4
   leftnexthop=1.2.3.5
   leftsubnet=192.168.0.0/24
# Right security gateway, subnet behind it, next hop toward it.
   right=5.6.7.8
   rightnexthop=5.6.7.9
   rightsubnet=192.168.1.0/24
   auto=start
 
Listing 1(d) Tunnel Mode VPN using RSA Keys

# Tunnel mode, static IP, RSA key authentication 
conn connection_3
        type=tunnel
        left=1.2.3.4
        leftnexthop=1.2.3.5
        leftsubnet=192.168.0.0/24
        leftrsasigkey=0x0f985uf8w35w4t98qr...
        leftid=1.2.3.4
        right=6.7.8.9
        rightnexthop=5.6.7.9
        rightsubnet=192.168.0.0/24
        rightrsasigkey=0x05j4535o6drw76cf34ca...
        rightid=5.6.7.8
# Authorize this connection, but don't actually start it, at startup.
        authby=rsasig
        auto=start

Listing 1(e) Static/Dynamic IP Pair of Gateways using RSA keys

conn connection_4
type=tunnel
        # IPSec gateways with dynamically assigned IP addresses.
        left=1.2.3.4
        leftnexthop=1.2.3.5
        leftsubnet=192.168.0.0/24
        leftrsasigkey=0x05j4535o6drw76cf34ca...
        leftid=@lefty.mycorp.com
        right=%defaultroute
        right subnet=192.168.1.0/24
        rightrsasigkey=0x0f985uf8w35w4t98qr...
        rightid=@righty.mycorp.com
        authby=rsasig
        auto=start



Listing 1(f) Road Warrior Configuration
conn connection_5
type=tunnel
        # IPSec gateways with dynamically assigned IP addresses.
        left=1.2.3.4
        leftnexthop=1.2.3.5
        leftsubnet=192.168.0.0/24
        leftrsasigkey=0x05j4535o6drw76cf34ca...
        leftid=@lefty.mycorp.com
        right=%defaultroute
        rightrsasigkey=0x0f985uf8w35w4t98qr...
        rightid=@righty.mycorp.com
        authby=rsasig
        auto=add


Listing 1 (g) Opportunistic encryption
conn connection_6 # Connection to anywhere using opportunistic
                  #encryption
leftsubnet=192.168.0.0/24  # all nodes in our subnet 
left=%defaultroute         # obtain our IPSec gateway IP automatically
right=%opportunistic       # check all destination IP DNS records,  and 
                           # see if they allow opportunistic encryption 

Listing 2 (a) ipsec.secrets file for PSK-authenticated VPN (Listing 
1(c))

1.2.3.4  5.6.7.8: PSK "jx2V2S5grnATGH86gerEpi6Vjl1RTmkuTmS1TRSnuR
1R525WTuTn321m4luVRRjWWU2uR2U3VnkU"

Listing 2 (b) an ipsec.secrets entry for RSA-authenticated VPN (Listing 
1(e))

1.2.3.4:  rsa {
        # 2048 bits, Tue Sep 25 14:14:54 2001
        # for signatures only, UNSAFE FOR ENCRYPTION
        #pubkey=0x0f985uf8w35w4t98qr...
       Modulus: 0xcc2a86fcf440cf1011abb82d1... 
       PublicExponent: 0x03 
       # everything after this point is secret   
         PrivateExponent: 0x881c59fdf8ab05c8c77d23...
        Prime1: 0xf49fd1f77946504c7bf3... 
        Prime2: 0xd5a9108453321d43cb2b... 
        Exponent1: 0xa31536a4fb536d98adda7f7... 
        Exponent2: 0x8e70b5ad8d9142168d7dcc7...
       Coefficient: 0xafb761d0010c13e98d98...


#---

#----------------------------------------------------------------------------------
PSK: PreSharedKey

#----------------------------------------------------------------------------------
# sample connection
conn REMOTE1
        authby=secret
        keylife=30m
        type=transport
        # Left security gateway, subnet behind it, next hop toward right.
        left=%defaultroute
        #leftsubnet=
        #leftnexthop=%defaultroute
        # Right security gateway, subnet behind it, next hop toward left.
        right=192.168.10.1
        #rightsubnet=
        #rightnexthop=
        auto=start

# /etc/ipsec.secrets for FreeS/Wan

192.168.10.94  192.168.10.1 : PSK "PreSharedKey"




#----------------------------------------------------------------------------------

test with echo turned on machine B

telnet 192.168.100.1 7   from A
tcpdump -l -n -s 12000 -X tcp port 7 > tcpdump.out & tail -f tcpdump.out    from A (or B)

this show clear text of the echo session

ON A (192.168.100.89)  vi /etc/ipsec.conf
conn connection_1
      type=transport
      left=192.168.100.89
      right=192.168.100.1
      auto=start

ON B (192.168.100.1)  vi /etc/ipsec.conf
conn connection_1
      type=transport
      left=192.168.100.89
      right=192.168.100.1
      auto=start

vi /etc/ipsec.secrets
192.168.100.1  192.168.100.89: PSK "jx2V2S5grnATGH86gerEpi6Vjl1RTmkuTmS1TRSnuR1R525WTuTn321m4luVRRjWWU2uR2U3VnkU"


on A:
/usr/local/sbin/ipsec auto --up connection_1


#----------------------------------------------------------------------------------

Notes for ipsec talk:

http://www.freeswan.org/freeswan_trees/freeswan-1.95/doc/ipsec.html#traffic.resist
Structure of IPsec

There are three protocols used in an IPsec implementation:

ESP, Encapsulating Security Payload 
     Encrypts and/or authenticates data 
AH, Authentication Header 
     Provides a packet authentication service 
IKE, Internet Key Exchange 
     Negotiates connection parameters, including keys, for the other two 

The term "IPsec" is slightly ambiguous. In some contexts, it includes all three of the above but in other contexts it refers only to AH and ESP.


#----------------------------------------------------------------------------------

#authentication ONLY - NO encryption (using AH, no ESP)
#freeswan will not do automatic keying for AH only, so we have
#to explicitly but it in below (ahkey).

#/etc/ipsec.conf
conn connection_2
      type=transport
      left=192.168.0.80 
      right=192.168.0.81
        spi=0x200
        ah=hmac-md5-96
        ahkey=0x12345678_9abcdef0_2468ace0_13579bdf

ON BOTH:
/etc/init.d/ipsec start
/usr/local/sbin/ipsec manual --up connection_2


#----------------------------------------------------------------------------------

to use X.509 certs with freeswan:
http://www.strongsec.com/freeswan/

The X.509 patch supports RSA-based authentication using  X.509 certificates between a Linux
FreeS/WAN security gateway and an unlimited number of  IPsec peers.


#----------------------------------------------------------------------------------
#----------------------------------------------------------------------------------
#----------------------------------------------------------------------------------
#----------------------------------------------------------------------------------



